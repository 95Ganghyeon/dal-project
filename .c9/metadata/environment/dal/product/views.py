{"changed":true,"filter":false,"title":"views.py","tooltip":"/dal/product/views.py","value":"from django.shortcuts import render\nfrom product.models import *\nfrom django.views import generic\nfrom django.core.paginator import Paginator\nfrom django.db.models import F, Func, Value, Avg\n\n# Create your views here.\ndef ProductDetail(request):\n    product = Product.objects.get(id=1)\n    review = Review.objects.get()\n    # review = Review.objects.select_related('user_id').get(id=1)\n    context={\n        'product': product,\n        # 'review': review,\n    }\n    return render(request, 'product_detail.html', context=context)\n\ndef search_list(request):\n    products = Product.objects.all()\n\n    if 'q' in request.GET:\n        query = request.GET.get('q')\n        query = query.replace(\" \", \"\")\n        products = products.annotate(rename=Func(F('name'), Value(' '), Value(''), function='REPLACE')).filter(rename__icontains=query)\n        \n    paginator = Paginator(products, 3)\n    page_number = request.GET.get('page')\n    page_obj = paginator.get_page(page_number)\n    context = {\n        'products': products,\n        'page_obj': page_obj,\n    }\n    return render(request, 'search_list.html', context=context)\n\n    \n    \ndef KeywordSearch(request):\n    \n    products = Review.objects.values_list('product_id__image','product_id__hashtag','product_id__name','product_id__category','star').annotate(avgStar=Avg('star')).order_by('-avgStar')\n    \n    \n    \n    paginator = Paginator(products, 3)\n    page_number = request.GET.get('page')\n    page_obj = paginator.get_page(page_number)\n    context = {\n        'products': products,\n        'page_obj': page_obj,\n    }\n    return render(request, 'keyword_search.html', context=context)\n\n\ndef compareSearch(request):\n    products = None\n    page_obj = None\n    first_page = True\n    products = Product.objects.all()\n\n    if 'q' in request.GET:\n        first_page = False\n        query = request.GET.get('q')\n        # my_product = Product.objects.get(name=query)\n        # products = Product.objects.filter(price__lt=my_product.price)\n        \n        paginator = Paginator(products, 3)\n        page_number = request.GET.get('page')\n        page_obj = paginator.get_page(page_number)\n        \n    context = {\n        'products': products,\n        'page_obj': page_obj,\n        'first_page': first_page,\n    }\n    return render(request, 'compare_search.html', context=context)\n\n\n\n\n\n\n\n\n# class SearchList(generic.ListView):\n#     model = Product\n#     template_name = 'search_list.html'\n#     paginate_by = 6\n#     context_object_name = 'products'\n    \n#     def get_queryset(self):\n#         try:\n#             search = self.request.GET.get('q')\n#         except KeyError:\n#             search = None\n    \n#         if search:\n#             product_list = Product.objects.filter(name__icontains=search)\n#         else:\n#             product_list = Product.objects.all()\n#         return product_list\n\n\n\n\n\n \n    # joined_ProductReview = Review.objects.select_related('product_id')\n    # products = Product.objects.values_list('id', 'image', 'hashtag', 'name', 'category', Avg('review__star'))\n    # products = Review.objects.values_list('product_id__id', 'product_id__category', 'star').annotate(avgStar=Avg('star')).order_by('-avgStar')\n    # products = joined_ProductReview.values('product_id').annotate(avgStar=Avg('star')).order_by('-avgStar')\n    \n    # if request.GET.get('keyword') == 'general':\n    #     products = Review.objects.values('product_id').annotate(avgStar=Avg('star')).order_by('-avgStar')\n    #     # products = joined_ProductReview.values('product_id').annotate(avgStar=Avg('star')).order_by('-avgStar')\n    # elif request.GET.get('keyword') == 'absorbency':\n    #     products = Review.objects.values('product_id').annotate(avgAbsorbency=Avg('absorbency')).order_by('-absorbency')\n    #     # products = joined_ProductReview.values('product_id').annotate(avgAbsorbency=Avg('absorbency')).order_by('-absorbency')\n    # elif request.GET.get('keyword') == 'anti_odour':\n    #     products = Review.objects.values('product_id').annotate(avgAnti_odour=Avg('anti_odour')).order_by('-anti_odour')    \n    #     # products = joined_ProductReview.values('product_id').annotate(avgAnti_odour=Avg('anti_odour')).order_by('-anti_odour')    \n    # elif request.GET.get('keyword') == 'comfort':\n    #     products = Review.objects.values('product_id').annotate(avgComfort=Avg('comfort')).order_by('-comfort')\n    #     # products = joined_ProductReview.values('product_id').annotate(avgComfort=Avg('comfort')).order_by('-comfort')\n    # elif request.GET.get('keyword') == 'sensitivity':\n    #     products = Review.objects.values('product_id').annotate(avgSensitivity=Avg('sensitivity')).order_by('-sensitivity')\n    #     # products = joined_ProductReview.values('product_id').annotate(avgSensitivity=Avg('sensitivity')).order_by('-sensitivity')\n\n    # products = Review.objects.all()","undoManager":{"mark":-2,"position":12,"stack":[[{"start":{"row":56,"column":23},"end":{"row":56,"column":53},"action":"remove","lines":["objects.select_related().all()"],"id":3376},{"start":{"row":56,"column":23},"end":{"row":56,"column":24},"action":"insert","lines":["o"]},{"start":{"row":56,"column":24},"end":{"row":56,"column":25},"action":"insert","lines":["b"]},{"start":{"row":56,"column":25},"end":{"row":56,"column":26},"action":"insert","lines":["j"]},{"start":{"row":56,"column":26},"end":{"row":56,"column":27},"action":"insert","lines":["e"]},{"start":{"row":56,"column":27},"end":{"row":56,"column":28},"action":"insert","lines":["c"]},{"start":{"row":56,"column":28},"end":{"row":56,"column":29},"action":"insert","lines":["t"]},{"start":{"row":56,"column":29},"end":{"row":56,"column":30},"action":"insert","lines":["s"]},{"start":{"row":56,"column":30},"end":{"row":56,"column":31},"action":"insert","lines":["."]},{"start":{"row":56,"column":31},"end":{"row":56,"column":32},"action":"insert","lines":["a"]},{"start":{"row":56,"column":32},"end":{"row":56,"column":33},"action":"insert","lines":["l"]},{"start":{"row":56,"column":33},"end":{"row":56,"column":34},"action":"insert","lines":["l"]}],[{"start":{"row":56,"column":34},"end":{"row":56,"column":36},"action":"insert","lines":["()"],"id":3377}],[{"start":{"row":57,"column":0},"end":{"row":58,"column":27},"action":"remove","lines":["    for product in products:","        print(product.name)"],"id":3378},{"start":{"row":56,"column":36},"end":{"row":57,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":56,"column":36},"end":{"row":57,"column":0},"action":"insert","lines":["",""],"id":3379},{"start":{"row":57,"column":0},"end":{"row":57,"column":4},"action":"insert","lines":["    "]},{"start":{"row":57,"column":4},"end":{"row":57,"column":5},"action":"insert","lines":["f"]},{"start":{"row":57,"column":5},"end":{"row":57,"column":6},"action":"insert","lines":["o"]},{"start":{"row":57,"column":6},"end":{"row":57,"column":7},"action":"insert","lines":["r"]}],[{"start":{"row":57,"column":7},"end":{"row":57,"column":8},"action":"insert","lines":[" "],"id":3380},{"start":{"row":57,"column":8},"end":{"row":57,"column":9},"action":"insert","lines":["p"]},{"start":{"row":57,"column":9},"end":{"row":57,"column":10},"action":"insert","lines":["r"]},{"start":{"row":57,"column":10},"end":{"row":57,"column":11},"action":"insert","lines":["o"]},{"start":{"row":57,"column":11},"end":{"row":57,"column":12},"action":"insert","lines":["d"]},{"start":{"row":57,"column":12},"end":{"row":57,"column":13},"action":"insert","lines":["u"]},{"start":{"row":57,"column":13},"end":{"row":57,"column":14},"action":"insert","lines":["c"]},{"start":{"row":57,"column":14},"end":{"row":57,"column":15},"action":"insert","lines":["t"]}],[{"start":{"row":57,"column":15},"end":{"row":57,"column":16},"action":"insert","lines":[" "],"id":3381},{"start":{"row":57,"column":16},"end":{"row":57,"column":17},"action":"insert","lines":["i"]},{"start":{"row":57,"column":17},"end":{"row":57,"column":18},"action":"insert","lines":["n"]}],[{"start":{"row":57,"column":18},"end":{"row":57,"column":19},"action":"insert","lines":[" "],"id":3382},{"start":{"row":57,"column":19},"end":{"row":57,"column":20},"action":"insert","lines":["p"]},{"start":{"row":57,"column":20},"end":{"row":57,"column":21},"action":"insert","lines":["r"]},{"start":{"row":57,"column":21},"end":{"row":57,"column":22},"action":"insert","lines":["o"]},{"start":{"row":57,"column":22},"end":{"row":57,"column":23},"action":"insert","lines":["d"]},{"start":{"row":57,"column":23},"end":{"row":57,"column":24},"action":"insert","lines":["u"]},{"start":{"row":57,"column":24},"end":{"row":57,"column":25},"action":"insert","lines":["c"]},{"start":{"row":57,"column":25},"end":{"row":57,"column":26},"action":"insert","lines":["t"]},{"start":{"row":57,"column":26},"end":{"row":57,"column":27},"action":"insert","lines":["s"]},{"start":{"row":57,"column":27},"end":{"row":57,"column":28},"action":"insert","lines":[":"]}],[{"start":{"row":57,"column":28},"end":{"row":58,"column":0},"action":"insert","lines":["",""],"id":3383},{"start":{"row":58,"column":0},"end":{"row":58,"column":8},"action":"insert","lines":["        "]},{"start":{"row":58,"column":8},"end":{"row":58,"column":9},"action":"insert","lines":["p"]},{"start":{"row":58,"column":9},"end":{"row":58,"column":10},"action":"insert","lines":["r"]},{"start":{"row":58,"column":10},"end":{"row":58,"column":11},"action":"insert","lines":["i"]},{"start":{"row":58,"column":11},"end":{"row":58,"column":12},"action":"insert","lines":["n"]},{"start":{"row":58,"column":12},"end":{"row":58,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":58,"column":13},"end":{"row":58,"column":15},"action":"insert","lines":["()"],"id":3384}],[{"start":{"row":58,"column":14},"end":{"row":58,"column":15},"action":"insert","lines":["p"],"id":3385},{"start":{"row":58,"column":15},"end":{"row":58,"column":16},"action":"insert","lines":["r"]},{"start":{"row":58,"column":16},"end":{"row":58,"column":17},"action":"insert","lines":["o"]},{"start":{"row":58,"column":17},"end":{"row":58,"column":18},"action":"insert","lines":["d"]},{"start":{"row":58,"column":18},"end":{"row":58,"column":19},"action":"insert","lines":["u"]},{"start":{"row":58,"column":19},"end":{"row":58,"column":20},"action":"insert","lines":["c"]},{"start":{"row":58,"column":20},"end":{"row":58,"column":21},"action":"insert","lines":["t"]},{"start":{"row":58,"column":21},"end":{"row":58,"column":22},"action":"insert","lines":["."]}],[{"start":{"row":58,"column":22},"end":{"row":58,"column":23},"action":"insert","lines":["r"],"id":3386},{"start":{"row":58,"column":23},"end":{"row":58,"column":24},"action":"insert","lines":["e"]},{"start":{"row":58,"column":24},"end":{"row":58,"column":25},"action":"insert","lines":["v"]},{"start":{"row":58,"column":25},"end":{"row":58,"column":26},"action":"insert","lines":["i"]},{"start":{"row":58,"column":26},"end":{"row":58,"column":27},"action":"insert","lines":["e"]},{"start":{"row":58,"column":27},"end":{"row":58,"column":28},"action":"insert","lines":["w"]}],[{"start":{"row":58,"column":28},"end":{"row":58,"column":29},"action":"insert","lines":["_"],"id":3387},{"start":{"row":58,"column":29},"end":{"row":58,"column":30},"action":"insert","lines":["_"]}],[{"start":{"row":57,"column":0},"end":{"row":58,"column":31},"action":"remove","lines":["    for product in products:","        print(product.review__)"],"id":3388}]]},"ace":{"folds":[],"scrolltop":743,"scrollleft":0,"selection":{"start":{"row":58,"column":26},"end":{"row":58,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":49,"state":"start","mode":"ace/mode/python"}},"timestamp":1579675412874}